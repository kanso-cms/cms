<?php

use kanso\framework\application\cli\Application;

/**
 * Configure PHP error reporting.
 * @see http://php.net/manual/en/function.error-reporting.php
 */
error_reporting(E_ALL | E_STRICT);

/*
 * Choose if errors that are NOT caught by the Kanso error and exception handlers should be
 * printed to the screen as part of the output or if they should be hidden from the user.
 * It is recommended to set this value to false when you are in production.
 * @see http://php.net/manual/en/errorfunc.configuration.php#ini.display-errors
 */
ini_set('display_errors', 0);

/*
 * Override the default path for error logs. Again this is will only be used if
 * error_reporting is enabled. It will also only log errors NOT caught by
 * the Kanso error and exception handlers.
 */
ini_set('error_log', dirname(__FILE__) . '/app/storage/logs/' . date('d_m_y') . '_php_errors.log');

/*
 * ---------------------------------------------------------
 * PHP 7.3
 * ---------------------------------------------------------
 */
if (strpos(phpversion(), '7.3') !== false)
{
	ini_set('pcre.jit', '0');
}

/*
 * ---------------------------------------------------------
 * ERROR HANDLING
 * ---------------------------------------------------------
 */

/*
 * Convert all errors to ErrorExceptions.
 */
set_error_handler(function($code, $message, $file, $line)
{
	if((error_reporting() & $code) !== 0)
	{
		throw new ErrorException($message, $code, 0, $file, $line);
	}

	return true;
});

/*
 * ---------------------------------------------------------
 * APPLICATION CONSTANTS
 * ---------------------------------------------------------
 */

/*
 * Path to the Kanso core directory.
 * This is REQUIRED for the application to function
 * properly.
 */
if (!defined('KANSO_DIR'))
{
	define('KANSO_DIR', dirname(__FILE__) . '/kanso');
}

/*
 * Path to the Kanso app directory.
 * This is REQUIRED for the application to function
 * properly.
 */
if (!defined('APP_DIR'))
{
	define('APP_DIR',  dirname(__FILE__) . '/app');
}

/*
 * Kanso uses a cascading file-system to load configuration
 * files. This means you can run Kanso under different 'environments',
 * by creating a new directory and placing any configuration files in
 * there. Then define the environment below as the directory.
 * @see https://github.com/phanan/cascading-config
 */

// Auto environment aware based on host
/*if (!defined('KANSO_ENV'))
{
	define('KANSO_ENV', 'sandbox');
}*/

/**
 * ---------------------------------------------------------
 * AUTOLOADING
 * ---------------------------------------------------------.
 */

/**
 * Composer autoloader.
 *
 * You need to install composer to use the autoloader
 */
require_once(dirname(KANSO_DIR) . '/vendor/autoload.php');

/**
 * ---------------------------------------------------------
 * INSTANTIATION
 * ---------------------------------------------------------.
 */
/**
 * Instantiate and initialize the Kanso application.
 */
$kanso = new Application;

/*
 * Run Kanso
 */
$kanso->run();